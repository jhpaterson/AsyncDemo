//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AsyncDemo.SlowServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/SlowServices")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstnameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastnameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Firstname {
            get {
                return this.FirstnameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstnameField, value) != true)) {
                    this.FirstnameField = value;
                    this.RaisePropertyChanged("Firstname");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Lastname {
            get {
                return this.LastnameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastnameField, value) != true)) {
                    this.LastnameField = value;
                    this.RaisePropertyChanged("Lastname");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SlowServiceReference.IUserListService")]
    public interface IUserListService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserListService/GetUserList", ReplyAction="http://tempuri.org/IUserListService/GetUserListResponse")]
        AsyncDemo.SlowServiceReference.User[] GetUserList();
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IUserListService/GetUserList", ReplyAction="http://tempuri.org/IUserListService/GetUserListResponse")]
        System.IAsyncResult BeginGetUserList(System.AsyncCallback callback, object asyncState);
        
        AsyncDemo.SlowServiceReference.User[] EndGetUserList(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserListServiceChannel : AsyncDemo.SlowServiceReference.IUserListService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetUserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetUserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AsyncDemo.SlowServiceReference.User[] Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AsyncDemo.SlowServiceReference.User[])(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserListServiceClient : System.ServiceModel.ClientBase<AsyncDemo.SlowServiceReference.IUserListService>, AsyncDemo.SlowServiceReference.IUserListService {
        
        private BeginOperationDelegate onBeginGetUserListDelegate;
        
        private EndOperationDelegate onEndGetUserListDelegate;
        
        private System.Threading.SendOrPostCallback onGetUserListCompletedDelegate;
        
        public UserListServiceClient() {
        }
        
        public UserListServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserListServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserListServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserListServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<GetUserListCompletedEventArgs> GetUserListCompleted;
        
        public AsyncDemo.SlowServiceReference.User[] GetUserList() {
            return base.Channel.GetUserList();
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginGetUserList(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetUserList(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AsyncDemo.SlowServiceReference.User[] EndGetUserList(System.IAsyncResult result) {
            return base.Channel.EndGetUserList(result);
        }
        
        private System.IAsyncResult OnBeginGetUserList(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return this.BeginGetUserList(callback, asyncState);
        }
        
        private object[] OnEndGetUserList(System.IAsyncResult result) {
            AsyncDemo.SlowServiceReference.User[] retVal = this.EndGetUserList(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetUserListCompleted(object state) {
            if ((this.GetUserListCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetUserListCompleted(this, new GetUserListCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetUserListAsync() {
            this.GetUserListAsync(null);
        }
        
        public void GetUserListAsync(object userState) {
            if ((this.onBeginGetUserListDelegate == null)) {
                this.onBeginGetUserListDelegate = new BeginOperationDelegate(this.OnBeginGetUserList);
            }
            if ((this.onEndGetUserListDelegate == null)) {
                this.onEndGetUserListDelegate = new EndOperationDelegate(this.OnEndGetUserList);
            }
            if ((this.onGetUserListCompletedDelegate == null)) {
                this.onGetUserListCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetUserListCompleted);
            }
            base.InvokeAsync(this.onBeginGetUserListDelegate, null, this.onEndGetUserListDelegate, this.onGetUserListCompletedDelegate, userState);
        }
    }
}
